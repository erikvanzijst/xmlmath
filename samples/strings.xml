<?xml version="1.0" encoding="UTF-8"?>
<!--
Takes the string "foo_bar", uses <substr> to select each individual character
and stores two copies of each separated character in a list that is
concatenated and printed, yielding "ffoooo__bbaarr".

The remarks behind the first two elements of the <for> loop illustrate the
similarity of xmlmath's for-loop with those found in C, C++, Java, etc.
-->

<expression xmlns="http://xmlmath.org/1.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlmath.org/1.0 http://xmlmath.org/1.0">
	
	<declare name="foo">
		<string value="foo_bar"/>
	</declare>
	<strcat>
		<for iterator="i">
			<long value="0"/>	<!-- for(i=0;... -->
			<strlen>			<!-- ...; i<strlen(foo); i++) -->
				<linkString name="foo"/>
			</strlen>
			
			<strcat>
			
				<substr>
					<linkString name="foo"/>
					<linkLong name="i"/>
					<toLong>
						<add>
							<linkLong name="i"/>
							<long value="1"/>
						</add>
					</toLong>
				</substr>
			
				<substr>
					<linkString name="foo"/>
					<linkLong name="i"/>
					<toLong>
						<add>
							<linkLong name="i"/>
							<long value="1"/>
						</add>
					</toLong>
				</substr>
				
			</strcat>
		</for>
	</strcat>
</expression>
